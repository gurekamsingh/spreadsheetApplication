name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install uv
      run: |
        pip install uv

    - name: Create virtual environment with uv
      run: |
        uv venv
        source .venv/bin/activate

    - name: Install dependencies
      run: |
        uv pip install -e .
        uv pip install pytest pytest-cov

    - name: Run linting
      run: |
        ruff check .
        ruff format --check .

    - name: Run tests
      run: |
        python -m pytest backend/test/ --cov=backend --cov-report=xml

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install uv
      run: |
        pip install uv

    - name: Create virtual environment with uv
      run: |
        uv venv
        source .venv/bin/activate

    - name: Install dependencies
      run: |
        uv pip install -e .

    - name: Build Docker image
      run: |
        docker build -t spreadsheet-app:${{ github.sha }} .

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker image
      run: |
        docker tag spreadsheet-app:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/spreadsheet-app:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/spreadsheet-app:${{ github.sha }}
        docker tag spreadsheet-app:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/spreadsheet-app:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/spreadsheet-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Minikube
      uses: manuel-packeisen/setup-minikube@v2.0.0
      with:
        minikube version: 'latest'
        kubernetes version: 'v1.28.0'
        driver: 'docker'
        start args: '--cpus=2 --memory=4g --disk-size=20g'

    - name: Configure kubectl
      run: |
        minikube kubectl -- get nodes
        minikube kubectl -- config view --flatten > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml

    - name: Deploy to Minikube
      run: |
        # Create namespace if it doesn't exist
        minikube kubectl -- create namespace spreadsheet-app --dry-run=client -o yaml | minikube kubectl -- apply -f -
        
        # Deploy application
        minikube kubectl -- apply -f kubernetes/ -n spreadsheet-app
        
        # Update deployment with new image
        minikube kubectl -- set image deployment/spreadsheet-app spreadsheet-app=${{ secrets.DOCKERHUB_USERNAME }}/spreadsheet-app:${{ github.sha }} -n spreadsheet-app
        
        # Wait for deployment to be ready
        minikube kubectl -- rollout status deployment/spreadsheet-app -n spreadsheet-app
        
        # Get the service URL
        minikube service spreadsheet-app -n spreadsheet-app --url 